) %>%
mutate(
tract_geoid = str_sub(cbg_geoid, end = -2)
)
# joining
joined <- left_join(
race_pop_cbg,
race_pop_tract) %>%
mutate(
variable = case_when(
variable == "B03002_003" ~ "white",
variable == "B03002_004" ~ "black_nh",
variable == "B03002_014" ~ "black_h",
)
)
# calculate wi/WT and bi/BT proportions for each cbg
joined <- joined %>%
mutate(prop = cbg_est / tract_est) %>%
mutate_at(vars(prop), ~replace(., is.nan(.), 0))
# roll up variables to tract level
joined <- joined %>%
dplyr::select(-c("cbg_est", "cbg_moe", "tract_est", "tract_moe")) %>%
pivot_wider(
names_from = variable,
names_glue = "{variable}_prop",
values_from = prop
)
# sum black_nh and black_h proportions
joined <- joined %>%
mutate(black_prop = black_nh_prop + black_h_prop) %>%
dplyr::select(-c("black_nh_prop", "black_h_prop"))
# calculate wi/WT - bi/BT for each tract
joined <- joined %>% mutate(prop_diff = abs(white_prop - black_prop))
# roll up to PUMA level and calculate dissimilarity index
joined_summ <- joined %>%
group_by(tract_geoid) %>%
summarize(dissim_index = 1/2 * sum(prop_diff)) %>%
rename(GEOID = tract_geoid)
# remove excess files
rm(race_pop_tract, race_pop_cbg, joined)
# first pull in the relevant variables into a df called edu_tract
edu_tract <-
get_acs(
geography = "tract",
variables = c("C15002H_006", "C15002H_011", "C15002H_001",
"C15002B_006", "C15002B_011", "C15002B_001"),
state = "06",
county = "Solano",
survey = "acs5",
year = 2022) %>%
dplyr::select(-c("NAME", "moe"))
# pivot from long to wide format for calculations within each PUMA
edu_tract <- edu_tract %>%
pivot_wider(
names_from = variable,
values_from = estimate
)
# calculate the white-black ratio in college graduation rates
edu_tract <- edu_tract %>%
mutate(
edu_dim =
((C15002H_006 + C15002H_011) / C15002H_001) /
((C15002B_006 + C15002B_011) / C15002B_001)
) %>%
mutate_at(vars(edu_dim), ~replace(., is.infinite(.), 1)) %>%
mutate_at(vars(edu_dim), ~replace(., is.nan(.), 0)) %>%
dplyr::select(GEOID, edu_dim)
# join values into joined_summ
joined_summ <- left_join(joined_summ, edu_tract)
rm(edu_tract)
# first pull in the relevant variables into a df called emp_tract
emp_tract <-
get_acs(
geography = "tract",
variables = c("C23002H_007", "C23002H_020", "C23002H_006", "C23002H_019",
"C23002B_007", "C23002B_020", "C23002B_006", "C23002B_019"),
state = "06",
county = "Solano",
survey = "acs5",
year = 2022) %>%
dplyr::select(-c("NAME", "moe"))
# pivot from long to wide format for calculations within each PUMA
emp_tract <- emp_tract %>%
pivot_wider(
names_from = variable,
values_from = estimate
)
# calculate the white-black ratio in employment rates
emp_tract <- emp_tract %>%
mutate(
emp_dim =
((C23002H_007 + C23002H_020) / (C23002H_006 + C23002H_019)) /
((C23002B_007 + C23002B_020) / (C23002B_006 + C23002B_019))
) %>%
mutate_at(vars(emp_dim), ~replace(., is.infinite(.), 1)) %>%
mutate_at(vars(emp_dim), ~replace(., is.nan(.), 0)) %>%
dplyr::select(GEOID, emp_dim)
# join values into joined_summ
joined_summ <- left_join(joined_summ, emp_tract)
rm(emp_tract)
# first pull in the relevant variables into a df called ice_tract
ice_tract <-
get_acs(
geography = "tract",
variables = c("B19001H_014", "B19001H_015", "B19001H_016", "B19001H_017", "B19001H_001",
"B19001B_002", "B19001B_003", "B19001B_004", "B19001B_005", "B19001B_001"),
state = "06",
county = "Solano",
survey = "acs5",
year = 2022) %>%
dplyr::select(-c("NAME", "moe"))
# pivot from long to wide format for calculations within each PUMA
ice_tract <- ice_tract %>%
pivot_wider(
names_from = variable,
values_from = estimate
)
# calculate the ICE
ice_tract <- ice_tract %>%
mutate(
ice_dim =
((B19001H_014 + B19001H_015 + B19001H_016 + B19001H_017) -
(B19001B_002 + B19001B_003 + B19001B_004 + B19001B_005)) /
(B19001H_001 + B19001B_001)
) %>%
mutate_at(vars(ice_dim), ~replace(., is.infinite(.), 1)) %>%
mutate_at(vars(ice_dim), ~replace(., is.nan(.), 0)) %>%
dplyr::select(GEOID, ice_dim)
# join values into joined_summ
joined_summ <- left_join(joined_summ, ice_tract)
rm(ice_tract)
# first pull in the relevant variables into a df called home_tract
home_tract <-
get_acs(
geography = "tract",
variables = c("B25003H_002", "B25003H_001", "B25003B_002", "B25003B_001"),
state = "06",
county = "Solano",
survey = "acs5",
year = 2022) %>%
dplyr::select(-c("NAME", "moe"))
# pivot from long to wide format for calculations within each PUMA
home_tract <- home_tract %>%
pivot_wider(
names_from = variable,
values_from = estimate
)
# calculate the white-black ratio in employment rates
home_tract <- home_tract %>%
mutate(
home_dim =
(B25003H_002 / B25003H_001) / (B25003B_002 / B25003B_001)
) %>%
mutate_at(vars(home_dim), ~replace(., is.infinite(.), 1)) %>%
mutate_at(vars(home_dim), ~replace(., is.nan(.), 0)) %>%
dplyr::select(GEOID, home_dim)
# join values into joined_summ
joined_summ <- left_join(joined_summ, home_tract)
rm(home_tract)
joined_summ <- joined_summ %>%
mutate(
dissim_bin = case_when(
dissim_index > median(dissim_index) ~ 1,
TRUE ~ 0),
edu_bin = case_when(
edu_dim > median(edu_dim) ~ 1,
TRUE ~ 0),
emp_bin = case_when(
emp_dim > median(emp_dim) ~ 1,
TRUE ~ 0),
ice_bin = case_when(
ice_dim > median(ice_dim) ~ 1,
TRUE ~ 0),
home_bin = case_when(
home_dim > median(home_dim) ~ 1,
TRUE ~ 0)
)
# create and sum z-score standardized values and dichotomized values
joined_summ <- joined_summ %>%
mutate(dim_sums =
0.2*(dissim_index - mean(dissim_index))/sd(dissim_index) +
0.2*(edu_dim - mean(edu_dim))/sd(edu_dim) +
0.2*(emp_dim - mean(emp_dim))/sd(emp_dim) +
0.2*(ice_dim - mean(ice_dim))/sd(ice_dim) +
0.2*(home_dim - mean(home_dim))/sd(home_dim),
bin_sums = dissim_bin + edu_bin + emp_bin + ice_bin + home_bin)
sr_tracts <- joined_summ %>%
select(GEOID, dim_sums, bin_sums)
# load crosswalk of GEOIDs to place names
# obtained via https://mcdc.missouri.edu/applications/geocorr2022.html
xwalk <- read_csv("/Users/lamhine/Documents/GitHub/solano_sr/policies/geoid_place_xwalk.csv")
# pick place with larger allocation factor value
xwalk <- xwalk %>%
group_by(GEOID) %>%
slice_max(afact, n = 1) %>%
select(GEOID, PlaceName)
# join in the place names
sr_tracts <- left_join(sr_tracts, xwalk)
# join in the policy scores
sr_tracts <- left_join(sr_tracts, pol_summ)
# overwrite index==NA as unincorporated places with index==0
sr_tracts <- sr_tracts %>%
mutate(
PlaceName = case_when(
is.na(index) ~ "Unincorporated",
TRUE ~ PlaceName),
index = case_when(
PlaceName == "Unincorporated" ~ 0,
TRUE ~ index)
) %>%
ungroup()
sr_tracts %>% slice_sample(n=20)
sr_tracts %>% group_by(PlaceName) %>% summarize(min = min(dim_sums), max = (dim_sums), sd = sd(dim_sums))
class(sr_tracts)
sr_tracts %>% group_by(PlaceName) %>% summarize(min = min(dim_sums))
sr_tracts %>% group_by(PlaceName) %>% summarize(min = min(dim_sums), max = (dim_sums))
sr_tracts %>% group_by(PlaceName) %>% summarize(min = min(dim_sums))
sr_tracts %>% group_by(PlaceName) %>% reframe(min = min(dim_sums))
sr_tracts %>% group_by(PlaceName) %>% reframe(min = min(dim_sums), max = (dim_sums), sd = sd(dim_sums))
sr_tracts %>% group_by(PlaceName) %>% summarize(across(dim_sums, list(min = min, max = max, sd = sd)))
getwd()
## Set working directory
setwd("/Users/lamhine/Documents/GitHub/cabrfss_multiracial/")
## LOAD PACKAGES AND DATA ##
library(tidyverse)
library(data.table)
library(foreign)
library(haven)
library(survey)
library(srvyr)
library(ggrepel)
# initialize storage vector and get list of names of DTA files
ca_brfss <- list()
lf = list.files(path="/Users/lamhine/My Drive/My papers, presentations, and abstracts/Active/BRFSS MRACASC1/state_brfss_data/California/CABRFSS/DTA FILES_T.Lam/",
pattern=NULL, all.files=FALSE,
full.names=TRUE)
# read in 2010-2017 and 2019, 2020 BRFSS DTA files into ca_brfss list
for (i in 1:length(lf)) {
ca_brfss[i] <- list(read_dta(lf[i]))
}
ca18 <- read_sas("/Users/lamhine/Library/CloudStorage/Box-Box/Data Core/1B_Consortia_Partnerships/San Joaquin Valley PH/Disparities Report/BRFSS/Request#1422-Lam-Hine/2017-2020 Datasets with SJVPHC County Recode/brfss18sjvphc.sas7bdat")
ca_brfss <- append(ca_brfss, list(ca18), after = 8)
# fix mismatched element types for date
ca_brfss[[5]]$DATE <- mdy(ca_brfss[[5]]$DATE)
ca_brfss[[6]]$DATE <- mdy(ca_brfss[[6]]$DATE)
ca_brfss[[9]]$DATE <- mdy(ca_brfss[[9]]$DATE)
ca_brfss[[10]]$DATE <- mdy(ca_brfss[[10]]$DATE)
ca_brfss[[11]]$DATE <- mdy(ca_brfss[[11]]$DATE)
ca_brfss[[12]]$DATE <- mdy(ca_brfss[[12]]$DATE)
ca_brfss[[11]]
# initialize storage vector and get list of names of DTA files
ca_brfss <- list()
lf
ca_brfss <- append(ca_brfss, list(ca18), after = 8)
# bind all list elements into one df
ca_df <- rbindlist(ca_brfss, fill = T)
View(ca_df)
View(ca18)
View(ca_df)
# diagnostics
table(ca_df$YEAR, exclude = NULL)
# initialize storage vector and get list of names of DTA files
ca_brfss <- list()
# read in 2010-2017 and 2019, 2020 BRFSS DTA files into ca_brfss list
for (i in 1:length(lf)) {
ca_brfss[i] <- list(read_dta(lf[i]))
}
ca_brfss <- append(ca_brfss, list(ca18), after = 8)
# bind all list elements into one df
ca_df <- rbindlist(ca_brfss, fill = T)
# fix mismatched element types for date
ca_brfss[[5]]$DATE <- mdy(ca_brfss[[5]]$DATE)
# bind all list elements into one df
ca_df <- rbindlist(ca_brfss, fill = T)
ca_brfss[[6]]$DATE <- mdy(ca_brfss[[6]]$DATE)
ca_brfss[[9]]$DATE <- mdy(ca_brfss[[9]]$DATE)
ca_brfss[[10]]$DATE <- mdy(ca_brfss[[10]]$DATE)
ca_brfss[[11]]$DATE <- mdy(ca_brfss[[11]]$DATE)
# bind all list elements into one df
ca_df <- rbindlist(ca_brfss, fill = T)
# diagnostics
table(ca_df$YEAR, exclude = NULL)
table(ca_df$ASTHEVE3, exclude=NULL)
table(ca_dfMRACASC1, exclude=NULL)
table(ca_df$MRACASC1, exclude=NULL)
table(ca_df$MRACASC1, ca_df$YEAR, exclude=NULL)
table(ca_df$MRACE1, ca_df$YEAR, exclude=NULL)
table(ca_df$MRACE1, ca_df$YEAR, exclude=NULL) %>% View()
table(ca_df$MRACE1, ca_df$YEAR, exclude=NULL) %>% tail()
table(ca_df$MRACORG1, ca_df$YEAR, exclude=NULL)
table(ca_df$MRACORG1, ca_df$YEAR, exclude=NULL) %>% tail()
table(ca_df$MRACASC1, ca_df$YEAR, exclude=NULL)
table(ca_df$MRACE1, ca_df$YEAR, exclude=NULL) %>% tail()
table(ca_df$MRACE1, ca_df$YEAR, exclude=NULL) %>% tail()
table(ca_df$ORACE3, ca_df$YEAR, exclude=NULL) %>% tail()
table(ca_df$ORACE2, ca_df$YEAR, exclude=NULL) %>% tail()
table(ca_df$ORACE2, ca_df$YEAR, exclude=NULL)
table(ca_df$ORACE2X, ca_df$YEAR, exclude=NULL)
table(ca_df$ORACE3, ca_df$YEAR, exclude=NULL)
table(ca_df$ORACE2, ca_df$YEAR, exclude=NULL)
table(ca_df$ORACE3_A, ca_df$YEAR, exclude=NULL)
table(ca_df$ASTHEVE3, exclude=NULL)
table(ca_df$ASTHEVE3, ca_df$YEAR, exclude=NULL)
table(ca_df$ASTHEVE3, ca_df$YEAR, exclude=NULL) %>% tibble()
table(ca_df$ASTHEVE3, ca_df$YEAR, exclude=NULL)
table(ca_df$ASTHEVE3, ca_df$YEAR, exclude=NULL) %>% as_tibble()
table(ca_df$ASTHEVE3, ca_df$YEAR, exclude=NULL) %>% tibble()
# create summary table
crude_tab <- table(ca_df$ASTHEVE3, ca_df$YEAR, exclude=NULL) %>% tibble()
names(crude_tab)
crude_tab
list(1:4)
c(2010:2020)
names(crude_tab) <- c(2010:2020)
crude_tab
crude_tab[,1]
# create summary table
crude_tab <- table(ca_df$ASTHEVE3, ca_df$YEAR, exclude=NULL) %>% as_data_frame()
# create summary table
crude_tab <- table(ca_df$ASTHEVE3, ca_df$YEAR, exclude=NULL) %>% as_tibble()
# create summary table
crude_tab <- table(ca_df$ASTHEVE3, ca_df$YEAR, exclude=NULL) %>%
as_tibble(.name_repair = ~ c(2010:2020))
# create summary table
crude_tab <- table(ca_df$ASTHEVE3, ca_df$YEAR, exclude=NULL) %>%
as_tibble(.name_repair = ~ as.character(c(2010:2020)))
# create summary table
crude_tab <- table(ca_df$ASTHEVE3, ca_df$YEAR, exclude=NULL) %>%
as_tibble(.name_repair = "unique")
crude_tab
# create summary table
crude_tab <- ca_df %>%
group_by(YEAR, ASTHEVE3) %>%
summarize()
crude_tab
# create summary table
crude_tab <- ca_df %>%
group_by(YEAR, ASTHEVE3) %>%
summarize() %>%
mutate(
ASTHEVE3 =
case_when(
ASTHEVE3 %in% c(7, 9, 77, 99) ~ NA_real_,
TRUE ~ ASTHEVE3)
)
crude_tab
# create summary table
crude_tab <- ca_df %>%
group_by(YEAR, ASTHEVE3) %>%
summarize(n = n()) %>%
mutate(
ASTHEVE3 =
case_when(
ASTHEVE3 %in% c(7, 9, 77, 99) ~ NA_real_,
TRUE ~ ASTHEVE3)
)
# create summary table
crude_tab <- ca_df %>%
mutate(
ASTHEVE3 =
case_when(
ASTHEVE3 %in% c(7, 9, 77, 99) ~ NA_real_,
TRUE ~ ASTHEVE3)
) %>%
group_by(YEAR, ASTHEVE3) %>%
summarize(n = n())
crude_tab
# create summary table
crude_tab <- ca_df %>%
mutate(
ASTHEVE3 =
case_when(
ASTHEVE3 %in% c(7, 9, 77, 99) ~ NA_real_,
TRUE ~ ASTHEVE3)
) %>%
group_by(YEAR, ASTHEVE3) %>%
summarize(n = n()) %>%
pivot_wider(ASTHEVE3)
# create summary table
crude_tab <- ca_df %>%
mutate(
ASTHEVE3 =
case_when(
ASTHEVE3 %in% c(7, 9, 77, 99) ~ NA_real_,
TRUE ~ ASTHEVE3)
) %>%
group_by(YEAR, ASTHEVE3) %>%
summarize(n = n()) %>%
pivot_wider(names_from = ASTHEVE3)
# create summary table
crude_tab <- ca_df %>%
mutate(
ASTHEVE3 =
case_when(
ASTHEVE3 %in% c(7, 9, 77, 99) ~ NA_real_,
TRUE ~ ASTHEVE3)
) %>%
group_by(YEAR, ASTHEVE3) %>%
summarize(n = n()) %>%
pivot_wider(names_from = ASTHEVE3, value = n)
# create summary table
crude_tab <- ca_df %>%
mutate(
ASTHEVE3 =
case_when(
ASTHEVE3 %in% c(7, 9, 77, 99) ~ NA_real_,
TRUE ~ ASTHEVE3)
) %>%
group_by(YEAR, ASTHEVE3) %>%
summarize(n = n()) %>%
pivot_wider(names_from = ASTHEVE3, values_from = n)
crude_tab
# create summary table
crude_tab <- ca_df %>%
mutate(
ASTHEVE3 =
case_when(
ASTHEVE3 %in% c(7, 9, 77, 99) ~ NA_real_,
TRUE ~ ASTHEVE3)
) %>%
group_by(YEAR, ASTHEVE3) %>%
summarize(n = n()) %>%
pivot_wider(names_from = ASTHEVE3, values_from = n) %>%
mutate(prop = `1` / sum(`1` + `2`))
crude_tab
# create summary table
crude_tab <- ca_df %>%
mutate(
ASTHEVE3 =
case_when(
ASTHEVE3 %in% c(7, 9, 77, 99) ~ NA_real_,
TRUE ~ ASTHEVE3)
) %>%
group_by(YEAR, ASTHEVE3) %>%
summarize(n = n()) %>%
pivot_wider(names_from = ASTHEVE3, values_from = n) %>%
mutate(prop = 100 * `1` / sum(`1` + `2`))
crude_tab
table(ca_df$ORACE4, ca_df$YEAR, exclude=NULL)
table(ca_df$ORACE4_A, ca_df$YEAR, exclude=NULL)
table(ca_df$ORACE4A, ca_df$YEAR, exclude=NULL)
table(ca_df$ORACE2X, ca_df$YEAR, exclude=NULL)
table(ca_df$ORACE3_A, ca_df$YEAR, exclude=NULL)
table(ca_df$ORACE3_B, ca_df$YEAR, exclude=NULL)
table(ca_df$ORACE3_C, ca_df$YEAR, exclude=NULL)
table(ca_df$MRACASC1, ca_df$YEAR, exclude=NULL)
table(ca_df$MRACE1, ca_df$YEAR, exclude=NULL) %>% tail()
table(ca_df$MRACE1, ca_df$YEAR, exclude=NULL)
table(ca_df$ORACE4A, ca_df$YEAR, exclude=NULL)
table(ca_df$ORACE4, ca_df$YEAR, exclude=NULL)
View(ca_df)
crude_tab <- ca_df %>%
select(YEAR, ASTHEVE3, ORACE4, ORACE4A) %>%
mutate(
ASTHEVE3 = case_when(
ASTHEVE3 %in% c(7, 9, 77, 99) ~ NA_real_,
TRUE ~ ASTHEVE3),
ORACE4 = case_when(
ORACE4 == 3 ~ 4,
ORACE4 == 4 ~ 5,
ORACE4 == 5 ~ 3),
race = paste0(ORACE4, ORACE4A)
)
table(crude_tab$race, crude_tab$YEAR, exclude=NULL)
crude_tab <- ca_df %>%
select(YEAR, ASTHEVE3, ORACE4, ORACE4A) %>%
mutate(
ASTHEVE3 = case_when(
ASTHEVE3 %in% c(7, 9, 77, 99) ~ NA_real_,
TRUE ~ ASTHEVE3),
ORACE4 = case_when(
ORACE4 == 3 ~ 4,
ORACE4 == 4 ~ 5,
ORACE4 == 5 ~ 3),
race = coalesce(ORACE4, ORACE4A)
)
table(crude_tab$race, crude_tab$YEAR, exclude=NULL)
table(ca_df$ORACE4, ca_df$YEAR, exclude=NULL)
table(ca_df$ORACE4A, ca_df$YEAR, exclude=NULL)
table(ca_df$ORACE4A, ca_df$YEAR)
table(ca_df$MRACE1, ca_df$YEAR, exclude=NULL)
table(ca_df$ORACE4A, ca_df$YEAR, exclude=NULL)
table(ca_df$ORACE3_A, ca_df$YEAR, exclude=NULL)
table(ca_df$ASTHEVE3, ca_df$YEAR, exclude=NULL)
table(ca_df$ASTHEVE3, ca_df$YEAR, exclude=NULL)
# create summary asthma prevalence table
crude_tab <- ca_df %>%
select(YEAR, ASTHEVE3, ORACE4, ORACE4A) %>%
mutate(
ASTHEVE3 = case_when(
ASTHEVE3 %in% c(7, 9, 77, 99) ~ NA_real_,
TRUE ~ ASTHEVE3),
ORACE4 = case_when(
ORACE4 == 3 ~ 4,
ORACE4 == 4 ~ 5,
ORACE4 == 5 ~ 3),
race = coalesce(ORACE4, ORACE4A)
) %>%
group_by(YEAR, ASTHEVE3) %>%
summarize(n = n()) %>%
pivot_wider(names_from = ASTHEVE3, values_from = n) %>%
mutate(prop = 100 * `1` / sum(`1` + `2`))
crude_tab <- ca_df %>%
select(YEAR, ASTHEVE3, ORACE4, ORACE4A) %>%
mutate(
ASTHEVE3 = case_when(
ASTHEVE3 %in% c(7, 9, 77, 99) ~ NA_real_,
TRUE ~ ASTHEVE3)) %>%
group_by(YEAR, ASTHEVE3) %>%
summarize(n = n()) %>%
pivot_wider(names_from = ASTHEVE3, values_from = n) %>%
mutate(prop = 100 * `1` / sum(`1` + `2`))
