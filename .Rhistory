smoke = fct_collapse(smoke,
"1" = c("1","2","3"),           # smoker
"2" = "4"),                     # never smoker
smokeless = fct_collapse(smokeless,
"1" = c("1","2"),               # yes
"2" = "3"),                     # no
pe_last = fct_collapse(pe_last,
"1" = c("1","2"),               # yes
"2" = c("3","4","5","8","88")), # no
pcp = fct_collapse(pcp,
"1" = c("1","2"),               # yes
"2" = "3")                      # no
)
# Name levels of factors
ca_df <- ca_df %>%
mutate(
sex = fct_recode(sex, "Male" = "1", "Female" = "2"),
edu = fct_recode(edu, "No HS Diploma" = "1", "HS Diploma or GED" = "2",
"Some college" = "3", "College graduate" = "4",
"Postgraduate" = "5"),
employ = fct_recode(employ, "Employed" = "1", "Unemployed" = "2",
"Not in labor force" = "3"),
income = fct_recode(income, "Less than $25,000" = "1",
"$25,000-49,999" = "2", "$50,000-99,999" = "3",
"$100,000 or more" = "4"),
marital = fct_recode(marital, "Married" = "1",
"Divorced, widowed, or separated" = "2",
"Never married" = "3"),
children = fct_recode(children, "None" = "1", "One" = "2", "Two" = "3",
"Three or more" = "4"),
ownhome = fct_recode(ownhome, "Own" = "1", "Rent" = "2", "Other" = "3"),
hlth_gen = fct_relevel(hlth_gen, "1"),
hlth_gen = fct_recode(hlth_gen, "Fair or poor health" = "1",
"Excellent, very good, or good health" = "2"),
ast_lt = fct_recode(ast_lt, "Yes" = "1", "No" = "2"),
ast_now = fct_recode(ast_now, "Yes" = "1", "No" = "2"),
apcvd = fct_recode(apcvd, "Yes" = "1", "No" = "2"),
mi = fct_recode(mi, "Yes" = "1", "No" = "2"),
copd = fct_recode(copd, "Yes" = "1", "No" = "2"),
mdd = fct_recode(mdd, "Yes" = "1", "No" = "2"),
dm = fct_recode(dm, "Yes" = "1", "No" = "2"),
ckd = fct_recode(ckd, "Yes" = "1", "No" = "2"),
bcc = fct_recode(bcc, "Yes" = "1", "No" = "2"),
bmi_cat = fct_relevel(bmi_cat, "2"),
bmi_cat = fct_recode(bmi_cat, "Yes" = "2", "No" = "1"),
exercise = fct_recode(exercise, "Yes" = "1", "No" = "2"),
smoke = fct_recode(smoke, "Yes" = "1", "No" = "2"),
smokeless = fct_recode(smokeless, "Yes" = "1", "No" = "2"),
drink_any = fct_recode(drink_any, "Yes" = "1", "No" = "2"),
drink_binge = fct_relevel(drink_binge, "2"),
drink_binge = fct_recode(drink_binge, "Yes" = "2", "No" = "1"),
hiv_test = fct_recode(hiv_test, "Yes" = "1", "No" = "2"),
laiv = fct_recode(laiv, "Yes" = "1", "No" = "2"),
pcv = fct_recode(pcv, "Yes" = "1", "No" = "2"),
vip = fct_recode(vip, "Yes" = "1", "No" = "2"),
dis_conc = fct_recode(dis_conc, "Yes" = "1", "No" = "2"),
dis_err = fct_recode(dis_err, "Yes" = "1", "No" = "2"),
dis_dress = fct_recode(dis_dress, "Yes" = "1", "No" = "2"),
dis_walk = fct_recode(dis_walk, "Yes" = "1", "No" = "2"),
ins_any = fct_recode(ins_any, "Yes" = "1", "No" = "2"),
ins_u65 = fct_recode(ins_u65, "Yes" = "1", "No" = "2"),
pe_last = fct_recode(pe_last, "Yes" = "1", "No" = "2"),
pcp = fct_recode(pcp, "Yes" = "1", "No" = "2")
)
# BEST WORKING PLOTS
ast_lt_plot <- ggplot(ast_lt_prevs,
aes(x=reorder(lt50_ra,mean),
y=mean)) +
geom_pointrange(
fatten = 0.5,
aes(ymin=mean_low,
ymax=mean_upp,
color=re_col_lab)) +
geom_point(
aes(size = n, color = re_col_lab),
alpha = 0.6) +
scale_size_area(max_size = 5) +
coord_cartesian(clip = "off") +
geom_text_repel(
aes(label = lt50_ra),
color = "black",
#max.overlaps = Inf,
size = 4) +
ylab("Prevalence") +
scale_x_discrete(breaks = NULL) +
theme_bw() +
theme(legend.position="none",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
facet_grid(~re_col_lab, scales = "free_x", space = "free_x")
ast_lt_plot
View(ast_lt_prev)
samp_size <- ca_df %>% group_by(YEAR) %>% summarize(samp_size = n()/nrow(ca_df))
ca_df <- left_join(ca_df, samp_size, by = "YEAR")
# divide LLCPWT by sample size to calculate final weight variable
ca_df <- ca_df %>% mutate(final_wt = LLCPWT/samp_size) %>% select(-samp_size)
# Create complex survey design
ca_dsn <- ca_df %>%
as_survey_design(id = 1, strata = STSTR, weights = final_wt)
## 5. CALCULATE WEIGHTED PREVALENCE BY GROUP ##
# xwalk to top-level racial groups
re_xwalk <- ca_df %>% group_by(re_col_lab, lt50_ra) %>% summarize(n=n())
# calculate overall lifetime prevalence
ast_lt_overall_prevs <- ca_dsn %>%
summarize(
n = n(),
mean_lt =
survey_mean(-as.integer(ast_lt)+2,
na.rm = T, vartype = c("ci", "se"),
level = 0.95, proportion = T,
prop_method = "logit", df = T)*100) %>%
mutate(
re_col_lab = "Overall",
lt50_ra = "")
# calculate group lifetime prevalence
ast_lt_group_prevs <- ca_dsn %>%
#mutate(re_col_lab = fct_collapse(re_col_lab, "Other Race" = c("DK/R", "Other Race"))) %>%
group_by(re_col_lab) %>%
summarize(
n = n(),
mean_lt =
survey_mean(-as.integer(ast_lt)+2,
na.rm = T, vartype = c("ci", "se"),
level = 0.95, proportion = T,
prop_method = "logit", df = T)*100) %>%
mutate(lt50_ra = "")
# calculate subgroup lifetime prevalence
ast_lt_subgroup_prevs <- ca_dsn %>%
mutate(
#re_col_lab = fct_collapse(re_col_lab, "Other Race" = c("DK/R", "Other Race")),
lt50_ra = fct_collapse(lt50_ra, "Other Race" = c("DK/R", "Other Race"))
) %>%
group_by(re_col_lab, lt50_ra) %>%
summarize(
n = n(),
mean_lt =
survey_mean(-as.integer(ast_lt)+2,
na.rm = T, vartype = c("ci", "se"),
level = 0.95, proportion = T,
prop_method = "logit", df = T)*100)
# calculate overall current prevalence
ast_now_overall_prevs <- ca_dsn %>%
summarize(
n = n(),
mean_now =
survey_mean(-as.integer(ast_now)+2,
na.rm = T, vartype = c("ci", "se"),
level = 0.95, proportion = T,
prop_method = "logit", df = T)*100) %>%
mutate(
re_col_lab = "Overall",
lt50_ra = "")
# calculate group current prevalence
ast_now_group_prevs <- ca_dsn %>%
mutate(
re_col_lab = fct_collapse(re_col_lab, "Other Race" = c("DK/R", "Other Race"))
) %>%
group_by(re_col_lab) %>%
summarize(
n = n(),
mean_now =
survey_mean(-as.integer(ast_now)+2,
na.rm = T, vartype = c("ci", "se"),
level = 0.95, proportion = T,
prop_method = "logit", df = T)*100) %>%
mutate(lt50_ra = "")
# calculate subgroup current prevalence
ast_now_subgroup_prevs <- ca_dsn %>%
mutate(
re_col_lab = fct_collapse(re_col_lab, "Other Race" = c("DK/R", "Other Race")),
lt50_ra = fct_collapse(lt50_ra, "Other Race" = c("DK/R", "Other Race"))
) %>%
group_by(re_col_lab, lt50_ra) %>%
summarize(
n = n(),
mean_now =
survey_mean(-as.integer(ast_now)+2,
na.rm = T, vartype = c("ci", "se"),
level = 0.95, proportion = T,
prop_method = "logit", df = T)*100)
# format prevalence table
ast_lt_prevs <- bind_rows(
ast_lt_subgroup_prevs,
ast_lt_group_prevs,
ast_lt_overall_prevs) %>%
arrange(lt50_ra) %>%
arrange(re_col_lab) %>%
mutate(
rse_lt = format(round((mean_lt_se/mean_lt)*100, 1), nsmall=1),
prev_lt =
paste0(format(round(mean_lt, 1), nsmall=1),
" (",
format(round(mean_lt_low, 1), nsmall=1),
", ",
format(round(mean_lt_upp, 1), nsmall=1),
")"
)
)
ast_now_prevs <- bind_rows(
ast_now_subgroup_prevs,
ast_now_group_prevs,
ast_now_overall_prevs) %>%
arrange(lt50_ra) %>%
arrange(re_col_lab) %>%
mutate(
rse_now = format(round((mean_now_se/mean_now)*100, 1), nsmall=1),
prev_now =
paste0(format(round(mean_now, 1), nsmall=1),
" (",
format(round(mean_now_low, 1), nsmall=1),
", ",
format(round(mean_now_upp, 1), nsmall=1),
")"
)
)
# new column with each year's proportional contribution to total sample size
samp_size <- ca_df %>% group_by(YEAR) %>% summarize(samp_size = n()/nrow(ca_df))
ca_df <- left_join(ca_df, samp_size, by = "YEAR")
# divide LLCPWT by sample size to calculate final weight variable
ca_df <- ca_df %>% mutate(final_wt = LLCPWT/samp_size) %>% select(-samp_size)
# Create complex survey design
ca_dsn <- ca_df %>%
as_survey_design(id = 1, strata = STSTR, weights = final_wt)
## 5. CALCULATE WEIGHTED PREVALENCE BY GROUP ##
# xwalk to top-level racial groups
re_xwalk <- ca_df %>% group_by(re_col_lab, lt50_ra) %>% summarize(n=n())
# calculate overall lifetime prevalence
ast_lt_overall_prevs <- ca_dsn %>%
summarize(
n = n(),
mean_lt =
survey_mean(-as.integer(ast_lt)+2,
na.rm = T, vartype = c("ci", "se"),
level = 0.95, proportion = T,
prop_method = "logit", df = T)*100) %>%
mutate(
re_col_lab = "Overall",
lt50_ra = "")
# calculate group lifetime prevalence
ast_lt_group_prevs <- ca_dsn %>%
group_by(re_col_lab) %>%
summarize(
n = n(),
mean_lt =
survey_mean(-as.integer(ast_lt)+2,
na.rm = T, vartype = c("ci", "se"),
level = 0.95, proportion = T,
prop_method = "logit", df = T)*100) %>%
mutate(lt50_ra = "")
# calculate subgroup lifetime prevalence
ast_lt_subgroup_prevs <- ca_dsn %>%
group_by(re_col_lab, lt50_ra) %>%
summarize(
n = n(),
mean_lt =
survey_mean(-as.integer(ast_lt)+2,
na.rm = T, vartype = c("ci", "se"),
level = 0.95, proportion = T,
prop_method = "logit", df = T)*100)
# calculate overall current prevalence
ast_now_overall_prevs <- ca_dsn %>%
summarize(
n = n(),
mean_now =
survey_mean(-as.integer(ast_now)+2,
na.rm = T, vartype = c("ci", "se"),
level = 0.95, proportion = T,
prop_method = "logit", df = T)*100) %>%
mutate(
re_col_lab = "Overall",
lt50_ra = "")
# calculate group current prevalence
ast_now_group_prevs <- ca_dsn %>%
group_by(re_col_lab) %>%
summarize(
n = n(),
mean_now =
survey_mean(-as.integer(ast_now)+2,
na.rm = T, vartype = c("ci", "se"),
level = 0.95, proportion = T,
prop_method = "logit", df = T)*100) %>%
mutate(lt50_ra = "")
# calculate subgroup current prevalence
ast_now_subgroup_prevs <- ca_dsn %>%
group_by(re_col_lab, lt50_ra) %>%
summarize(
n = n(),
mean_now =
survey_mean(-as.integer(ast_now)+2,
na.rm = T, vartype = c("ci", "se"),
level = 0.95, proportion = T,
prop_method = "logit", df = T)*100)
# format prevalence table
ast_lt_prevs <- bind_rows(
ast_lt_subgroup_prevs,
ast_lt_group_prevs,
ast_lt_overall_prevs) %>%
arrange(lt50_ra) %>%
arrange(re_col_lab) %>%
mutate(
rse_lt = format(round((mean_lt_se/mean_lt)*100, 1), nsmall=1),
prev_lt =
paste0(format(round(mean_lt, 1), nsmall=1),
" (",
format(round(mean_lt_low, 1), nsmall=1),
", ",
format(round(mean_lt_upp, 1), nsmall=1),
")"
)
)
View(ast_lt_prevs)
View(ast_now_prevs)
ast_lt_plot <- ggplot(ast_lt_prevs,
aes(x=reorder(lt50_ra,mean_lt),
y=mean_lt)) +
geom_pointrange(
fatten = 0.5,
aes(ymin=mean_lt_low,
ymax=mean_lt_upp,
color=re_col_lab)) +
geom_point(
aes(size = n, color = re_col_lab),
alpha = 0.6) +
scale_size_area(max_size = 5) +
coord_cartesian(clip = "off") +
geom_text_repel(
aes(label = lt50_ra),
color = "black",
#max.overlaps = Inf,
size = 4) +
ylab("Prevalence") +
scale_x_discrete(breaks = NULL) +
theme_bw() +
theme(legend.position="none",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
facet_grid(~re_col_lab, scales = "free_x", space = "free_x")
ast_lt_plot
ast_lt_plot <- ggplot(filter(ast_lt_prevs, !is.na(lt50_ra)),
aes(x=reorder(lt50_ra,mean_lt),
y=mean_lt)) +
geom_pointrange(
fatten = 0.5,
aes(ymin=mean_lt_low,
ymax=mean_lt_upp,
color=re_col_lab)) +
geom_point(
aes(size = n, color = re_col_lab),
alpha = 0.6) +
scale_size_area(max_size = 5) +
coord_cartesian(clip = "off") +
geom_text_repel(
aes(label = lt50_ra),
color = "black",
#max.overlaps = Inf,
size = 4) +
ylab("Prevalence") +
scale_x_discrete(breaks = NULL) +
theme_bw() +
theme(legend.position="none",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
facet_grid(~re_col_lab, scales = "free_x", space = "free_x")
ast_lt_plot
ast_lt_plot <- ggplot(filter(ast_lt_prevs, lt50_ra != ""),
aes(x=reorder(lt50_ra,mean_lt),
y=mean_lt)) +
geom_pointrange(
fatten = 0.5,
aes(ymin=mean_lt_low,
ymax=mean_lt_upp,
color=re_col_lab)) +
geom_point(
aes(size = n, color = re_col_lab),
alpha = 0.6) +
scale_size_area(max_size = 5) +
coord_cartesian(clip = "off") +
geom_text_repel(
aes(label = lt50_ra),
color = "black",
#max.overlaps = Inf,
size = 4) +
ylab("Prevalence") +
scale_x_discrete(breaks = NULL) +
theme_bw() +
theme(legend.position="none",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
facet_grid(~re_col_lab, scales = "free_x", space = "free_x")
ast_lt_plot
ast_lt_plot <- ggplot(filter(ast_lt_prevs, lt50_ra != ""),
aes(x=reorder(lt50_ra,mean_lt),
y=mean_lt)) +
geom_pointrange(
fatten = 0.5,
aes(ymin=mean_lt_low,
ymax=mean_lt_upp,
color=re_col_lab)) +
geom_point(
aes(size = n, color = re_col_lab),
alpha = 0.6) +
scale_size_area(max_size = 5) +
coord_cartesian(clip = "off") +
geom_text_repel(
aes(label = lt50_ra),
color = "black",
#max.overlaps = Inf,
size = 4) +
ylab("Prevalence") +
scale_x_discrete(breaks = NULL) +
theme_bw() +
theme(legend.position="none",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
facet_grid(~re_col_lab, scales = "free_x", space = "free_x")
ast_lt_plot
ast_now_plot <- ggplot(filter(ast_now_prevs, lt50_ra != ""),
aes(x=reorder(lt50_ra,mean_now),
y=mean_now)) +
geom_pointrange(
fatten = 0.5,
aes(ymin=mean_now_low,
ymax=mean_now_upp,
color=re_col_lab)) +
geom_point(
aes(size = n, color = re_col_lab),
alpha = 0.6) +
scale_size_area(max_size = 5) +
coord_cartesian(clip = "off") +
geom_text_repel(
aes(label = lt50_ra),
color = "black",
#max.overlaps = Inf,
size = 4) +
ylab("Prevalence") +
scale_x_discrete(breaks = NULL) +
theme_bw() +
theme(legend.position="none",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
facet_grid(~re_col_lab, scales = "free_x", space = "free_x")
ast_now_plot
ast_lt_plot <- ast_lt_prevs %>%
filter(
lt50_ra != "",
lt50_ra != "Unknown Race"
) %>%
ggplot(aes(x=reorder(lt50_ra,mean_lt),
y=mean_lt)) +
geom_pointrange(
fatten = 0.5,
aes(ymin=mean_lt_low,
ymax=mean_lt_upp,
color=re_col_lab)) +
geom_point(
aes(size = n, color = re_col_lab),
alpha = 0.6) +
scale_size_area(max_size = 5) +
coord_cartesian(clip = "off") +
geom_text_repel(
aes(label = lt50_ra),
color = "black",
#max.overlaps = Inf,
size = 4) +
ylab("Prevalence") +
scale_x_discrete(breaks = NULL) +
theme_bw() +
theme(legend.position="none",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
facet_grid(~re_col_lab, scales = "free_x", space = "free_x")
ast_lt_plot
ast_now_plot <- ast_now_prevs %>%
filter(
lt50_ra != "",
lt50_ra != "Unknown Race"
) %>%
ggplot(aes(x=reorder(lt50_ra,mean_now),
y=mean_now)) +
geom_pointrange(
fatten = 0.5,
aes(ymin=mean_now_low,
ymax=mean_now_upp,
color=re_col_lab)) +
geom_point(
aes(size = n, color = re_col_lab),
alpha = 0.6) +
scale_size_area(max_size = 5) +
coord_cartesian(clip = "off") +
geom_text_repel(
aes(label = lt50_ra),
color = "black",
#max.overlaps = Inf,
size = 4) +
ylab("Prevalence") +
scale_x_discrete(breaks = NULL) +
theme_bw() +
theme(legend.position="none",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
facet_grid(~re_col_lab, scales = "free_x", space = "free_x")
ast_now_plot
ast_lt_plot
ast_now_plot
